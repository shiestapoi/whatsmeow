// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.6.1
// source: waCompanionReg/WAWebProtobufsCompanionReg.proto

package waCompanionReg

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeviceProps_PlatformType int32

const (
	DeviceProps_UNKNOWN           DeviceProps_PlatformType = 0
	DeviceProps_CHROME            DeviceProps_PlatformType = 1
	DeviceProps_FIREFOX           DeviceProps_PlatformType = 2
	DeviceProps_IE                DeviceProps_PlatformType = 3
	DeviceProps_OPERA             DeviceProps_PlatformType = 4
	DeviceProps_SAFARI            DeviceProps_PlatformType = 5
	DeviceProps_EDGE              DeviceProps_PlatformType = 6
	DeviceProps_DESKTOP           DeviceProps_PlatformType = 7
	DeviceProps_IPAD              DeviceProps_PlatformType = 8
	DeviceProps_ANDROID_TABLET    DeviceProps_PlatformType = 9
	DeviceProps_OHANA             DeviceProps_PlatformType = 10
	DeviceProps_ALOHA             DeviceProps_PlatformType = 11
	DeviceProps_CATALINA          DeviceProps_PlatformType = 12
	DeviceProps_TCL_TV            DeviceProps_PlatformType = 13
	DeviceProps_IOS_PHONE         DeviceProps_PlatformType = 14
	DeviceProps_IOS_CATALYST      DeviceProps_PlatformType = 15
	DeviceProps_ANDROID_PHONE     DeviceProps_PlatformType = 16
	DeviceProps_ANDROID_AMBIGUOUS DeviceProps_PlatformType = 17
	DeviceProps_WEAR_OS           DeviceProps_PlatformType = 18
	DeviceProps_AR_WRIST          DeviceProps_PlatformType = 19
	DeviceProps_AR_DEVICE         DeviceProps_PlatformType = 20
	DeviceProps_UWP               DeviceProps_PlatformType = 21
	DeviceProps_VR                DeviceProps_PlatformType = 22
	DeviceProps_CLOUD_API         DeviceProps_PlatformType = 23
	DeviceProps_SMARTGLASSES      DeviceProps_PlatformType = 24
)

// Enum value maps for DeviceProps_PlatformType.
var (
	DeviceProps_PlatformType_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "CHROME",
		2:  "FIREFOX",
		3:  "IE",
		4:  "OPERA",
		5:  "SAFARI",
		6:  "EDGE",
		7:  "DESKTOP",
		8:  "IPAD",
		9:  "ANDROID_TABLET",
		10: "OHANA",
		11: "ALOHA",
		12: "CATALINA",
		13: "TCL_TV",
		14: "IOS_PHONE",
		15: "IOS_CATALYST",
		16: "ANDROID_PHONE",
		17: "ANDROID_AMBIGUOUS",
		18: "WEAR_OS",
		19: "AR_WRIST",
		20: "AR_DEVICE",
		21: "UWP",
		22: "VR",
		23: "CLOUD_API",
		24: "SMARTGLASSES",
	}
	DeviceProps_PlatformType_value = map[string]int32{
		"UNKNOWN":           0,
		"CHROME":            1,
		"FIREFOX":           2,
		"IE":                3,
		"OPERA":             4,
		"SAFARI":            5,
		"EDGE":              6,
		"DESKTOP":           7,
		"IPAD":              8,
		"ANDROID_TABLET":    9,
		"OHANA":             10,
		"ALOHA":             11,
		"CATALINA":          12,
		"TCL_TV":            13,
		"IOS_PHONE":         14,
		"IOS_CATALYST":      15,
		"ANDROID_PHONE":     16,
		"ANDROID_AMBIGUOUS": 17,
		"WEAR_OS":           18,
		"AR_WRIST":          19,
		"AR_DEVICE":         20,
		"UWP":               21,
		"VR":                22,
		"CLOUD_API":         23,
		"SMARTGLASSES":      24,
	}
)

func (x DeviceProps_PlatformType) Enum() *DeviceProps_PlatformType {
	p := new(DeviceProps_PlatformType)
	*p = x
	return p
}

func (x DeviceProps_PlatformType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeviceProps_PlatformType) Descriptor() protoreflect.EnumDescriptor {
	return file_waCompanionReg_WAWebProtobufsCompanionReg_proto_enumTypes[0].Descriptor()
}

func (DeviceProps_PlatformType) Type() protoreflect.EnumType {
	return &file_waCompanionReg_WAWebProtobufsCompanionReg_proto_enumTypes[0]
}

func (x DeviceProps_PlatformType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *DeviceProps_PlatformType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = DeviceProps_PlatformType(num)
	return nil
}

// Deprecated: Use DeviceProps_PlatformType.Descriptor instead.
func (DeviceProps_PlatformType) EnumDescriptor() ([]byte, []int) {
	return file_waCompanionReg_WAWebProtobufsCompanionReg_proto_rawDescGZIP(), []int{0, 0}
}

type DeviceProps struct {
	state             protoimpl.MessageState         `protogen:"open.v1"`
	Os                *string                        `protobuf:"bytes,1,opt,name=os" json:"os,omitempty"`
	Version           *DeviceProps_AppVersion        `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	PlatformType      *DeviceProps_PlatformType      `protobuf:"varint,3,opt,name=platformType,enum=WAWebProtobufsCompanionReg.DeviceProps_PlatformType" json:"platformType,omitempty"`
	RequireFullSync   *bool                          `protobuf:"varint,4,opt,name=requireFullSync" json:"requireFullSync,omitempty"`
	HistorySyncConfig *DeviceProps_HistorySyncConfig `protobuf:"bytes,5,opt,name=historySyncConfig" json:"historySyncConfig,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DeviceProps) Reset() {
	*x = DeviceProps{}
	mi := &file_waCompanionReg_WAWebProtobufsCompanionReg_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceProps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceProps) ProtoMessage() {}

func (x *DeviceProps) ProtoReflect() protoreflect.Message {
	mi := &file_waCompanionReg_WAWebProtobufsCompanionReg_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceProps.ProtoReflect.Descriptor instead.
func (*DeviceProps) Descriptor() ([]byte, []int) {
	return file_waCompanionReg_WAWebProtobufsCompanionReg_proto_rawDescGZIP(), []int{0}
}

func (x *DeviceProps) GetOs() string {
	if x != nil && x.Os != nil {
		return *x.Os
	}
	return ""
}

func (x *DeviceProps) GetVersion() *DeviceProps_AppVersion {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *DeviceProps) GetPlatformType() DeviceProps_PlatformType {
	if x != nil && x.PlatformType != nil {
		return *x.PlatformType
	}
	return DeviceProps_UNKNOWN
}

func (x *DeviceProps) GetRequireFullSync() bool {
	if x != nil && x.RequireFullSync != nil {
		return *x.RequireFullSync
	}
	return false
}

func (x *DeviceProps) GetHistorySyncConfig() *DeviceProps_HistorySyncConfig {
	if x != nil {
		return x.HistorySyncConfig
	}
	return nil
}

type CompanionEphemeralIdentity struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	PublicKey     []byte                    `protobuf:"bytes,1,opt,name=publicKey" json:"publicKey,omitempty"`
	DeviceType    *DeviceProps_PlatformType `protobuf:"varint,2,opt,name=deviceType,enum=WAWebProtobufsCompanionReg.DeviceProps_PlatformType" json:"deviceType,omitempty"`
	Ref           *string                   `protobuf:"bytes,3,opt,name=ref" json:"ref,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompanionEphemeralIdentity) Reset() {
	*x = CompanionEphemeralIdentity{}
	mi := &file_waCompanionReg_WAWebProtobufsCompanionReg_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompanionEphemeralIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanionEphemeralIdentity) ProtoMessage() {}

func (x *CompanionEphemeralIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_waCompanionReg_WAWebProtobufsCompanionReg_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanionEphemeralIdentity.ProtoReflect.Descriptor instead.
func (*CompanionEphemeralIdentity) Descriptor() ([]byte, []int) {
	return file_waCompanionReg_WAWebProtobufsCompanionReg_proto_rawDescGZIP(), []int{1}
}

func (x *CompanionEphemeralIdentity) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *CompanionEphemeralIdentity) GetDeviceType() DeviceProps_PlatformType {
	if x != nil && x.DeviceType != nil {
		return *x.DeviceType
	}
	return DeviceProps_UNKNOWN
}

func (x *CompanionEphemeralIdentity) GetRef() string {
	if x != nil && x.Ref != nil {
		return *x.Ref
	}
	return ""
}

type CompanionCommitment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          []byte                 `protobuf:"bytes,1,opt,name=hash" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompanionCommitment) Reset() {
	*x = CompanionCommitment{}
	mi := &file_waCompanionReg_WAWebProtobufsCompanionReg_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompanionCommitment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanionCommitment) ProtoMessage() {}

func (x *CompanionCommitment) ProtoReflect() protoreflect.Message {
	mi := &file_waCompanionReg_WAWebProtobufsCompanionReg_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanionCommitment.ProtoReflect.Descriptor instead.
func (*CompanionCommitment) Descriptor() ([]byte, []int) {
	return file_waCompanionReg_WAWebProtobufsCompanionReg_proto_rawDescGZIP(), []int{2}
}

func (x *CompanionCommitment) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

type ProloguePayload struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	CompanionEphemeralIdentity []byte                 `protobuf:"bytes,1,opt,name=companionEphemeralIdentity" json:"companionEphemeralIdentity,omitempty"`
	Commitment                 *CompanionCommitment   `protobuf:"bytes,2,opt,name=commitment" json:"commitment,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ProloguePayload) Reset() {
	*x = ProloguePayload{}
	mi := &file_waCompanionReg_WAWebProtobufsCompanionReg_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProloguePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProloguePayload) ProtoMessage() {}

func (x *ProloguePayload) ProtoReflect() protoreflect.Message {
	mi := &file_waCompanionReg_WAWebProtobufsCompanionReg_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProloguePayload.ProtoReflect.Descriptor instead.
func (*ProloguePayload) Descriptor() ([]byte, []int) {
	return file_waCompanionReg_WAWebProtobufsCompanionReg_proto_rawDescGZIP(), []int{3}
}

func (x *ProloguePayload) GetCompanionEphemeralIdentity() []byte {
	if x != nil {
		return x.CompanionEphemeralIdentity
	}
	return nil
}

func (x *ProloguePayload) GetCommitment() *CompanionCommitment {
	if x != nil {
		return x.Commitment
	}
	return nil
}

type PrimaryEphemeralIdentity struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PublicKey     []byte                 `protobuf:"bytes,1,opt,name=publicKey" json:"publicKey,omitempty"`
	Nonce         []byte                 `protobuf:"bytes,2,opt,name=nonce" json:"nonce,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrimaryEphemeralIdentity) Reset() {
	*x = PrimaryEphemeralIdentity{}
	mi := &file_waCompanionReg_WAWebProtobufsCompanionReg_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrimaryEphemeralIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrimaryEphemeralIdentity) ProtoMessage() {}

func (x *PrimaryEphemeralIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_waCompanionReg_WAWebProtobufsCompanionReg_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrimaryEphemeralIdentity.ProtoReflect.Descriptor instead.
func (*PrimaryEphemeralIdentity) Descriptor() ([]byte, []int) {
	return file_waCompanionReg_WAWebProtobufsCompanionReg_proto_rawDescGZIP(), []int{4}
}

func (x *PrimaryEphemeralIdentity) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *PrimaryEphemeralIdentity) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

type PairingRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	CompanionPublicKey   []byte                 `protobuf:"bytes,1,opt,name=companionPublicKey" json:"companionPublicKey,omitempty"`
	CompanionIdentityKey []byte                 `protobuf:"bytes,2,opt,name=companionIdentityKey" json:"companionIdentityKey,omitempty"`
	AdvSecret            []byte                 `protobuf:"bytes,3,opt,name=advSecret" json:"advSecret,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *PairingRequest) Reset() {
	*x = PairingRequest{}
	mi := &file_waCompanionReg_WAWebProtobufsCompanionReg_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PairingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PairingRequest) ProtoMessage() {}

func (x *PairingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_waCompanionReg_WAWebProtobufsCompanionReg_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PairingRequest.ProtoReflect.Descriptor instead.
func (*PairingRequest) Descriptor() ([]byte, []int) {
	return file_waCompanionReg_WAWebProtobufsCompanionReg_proto_rawDescGZIP(), []int{5}
}

func (x *PairingRequest) GetCompanionPublicKey() []byte {
	if x != nil {
		return x.CompanionPublicKey
	}
	return nil
}

func (x *PairingRequest) GetCompanionIdentityKey() []byte {
	if x != nil {
		return x.CompanionIdentityKey
	}
	return nil
}

func (x *PairingRequest) GetAdvSecret() []byte {
	if x != nil {
		return x.AdvSecret
	}
	return nil
}

type EncryptedPairingRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	EncryptedPayload []byte                 `protobuf:"bytes,1,opt,name=encryptedPayload" json:"encryptedPayload,omitempty"`
	IV               []byte                 `protobuf:"bytes,2,opt,name=IV" json:"IV,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *EncryptedPairingRequest) Reset() {
	*x = EncryptedPairingRequest{}
	mi := &file_waCompanionReg_WAWebProtobufsCompanionReg_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncryptedPairingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptedPairingRequest) ProtoMessage() {}

func (x *EncryptedPairingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_waCompanionReg_WAWebProtobufsCompanionReg_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptedPairingRequest.ProtoReflect.Descriptor instead.
func (*EncryptedPairingRequest) Descriptor() ([]byte, []int) {
	return file_waCompanionReg_WAWebProtobufsCompanionReg_proto_rawDescGZIP(), []int{6}
}

func (x *EncryptedPairingRequest) GetEncryptedPayload() []byte {
	if x != nil {
		return x.EncryptedPayload
	}
	return nil
}

func (x *EncryptedPairingRequest) GetIV() []byte {
	if x != nil {
		return x.IV
	}
	return nil
}

type ClientPairingProps struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	IsChatDbLidMigrated   *bool                  `protobuf:"varint,1,opt,name=isChatDbLidMigrated" json:"isChatDbLidMigrated,omitempty"`
	IsSyncdPureLidSession *bool                  `protobuf:"varint,2,opt,name=isSyncdPureLidSession" json:"isSyncdPureLidSession,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ClientPairingProps) Reset() {
	*x = ClientPairingProps{}
	mi := &file_waCompanionReg_WAWebProtobufsCompanionReg_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientPairingProps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientPairingProps) ProtoMessage() {}

func (x *ClientPairingProps) ProtoReflect() protoreflect.Message {
	mi := &file_waCompanionReg_WAWebProtobufsCompanionReg_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientPairingProps.ProtoReflect.Descriptor instead.
func (*ClientPairingProps) Descriptor() ([]byte, []int) {
	return file_waCompanionReg_WAWebProtobufsCompanionReg_proto_rawDescGZIP(), []int{7}
}

func (x *ClientPairingProps) GetIsChatDbLidMigrated() bool {
	if x != nil && x.IsChatDbLidMigrated != nil {
		return *x.IsChatDbLidMigrated
	}
	return false
}

func (x *ClientPairingProps) GetIsSyncdPureLidSession() bool {
	if x != nil && x.IsSyncdPureLidSession != nil {
		return *x.IsSyncdPureLidSession
	}
	return false
}

type DeviceProps_HistorySyncConfig struct {
	state                                    protoimpl.MessageState `protogen:"open.v1"`
	FullSyncDaysLimit                        *uint32                `protobuf:"varint,1,opt,name=fullSyncDaysLimit" json:"fullSyncDaysLimit,omitempty"`
	FullSyncSizeMbLimit                      *uint32                `protobuf:"varint,2,opt,name=fullSyncSizeMbLimit" json:"fullSyncSizeMbLimit,omitempty"`
	StorageQuotaMb                           *uint32                `protobuf:"varint,3,opt,name=storageQuotaMb" json:"storageQuotaMb,omitempty"`
	InlineInitialPayloadInE2EeMsg            *bool                  `protobuf:"varint,4,opt,name=inlineInitialPayloadInE2EeMsg" json:"inlineInitialPayloadInE2EeMsg,omitempty"`
	RecentSyncDaysLimit                      *uint32                `protobuf:"varint,5,opt,name=recentSyncDaysLimit" json:"recentSyncDaysLimit,omitempty"`
	SupportCallLogHistory                    *bool                  `protobuf:"varint,6,opt,name=supportCallLogHistory" json:"supportCallLogHistory,omitempty"`
	SupportBotUserAgentChatHistory           *bool                  `protobuf:"varint,7,opt,name=supportBotUserAgentChatHistory" json:"supportBotUserAgentChatHistory,omitempty"`
	SupportCagReactionsAndPolls              *bool                  `protobuf:"varint,8,opt,name=supportCagReactionsAndPolls" json:"supportCagReactionsAndPolls,omitempty"`
	SupportBizHostedMsg                      *bool                  `protobuf:"varint,9,opt,name=supportBizHostedMsg" json:"supportBizHostedMsg,omitempty"`
	SupportRecentSyncChunkMessageCountTuning *bool                  `protobuf:"varint,10,opt,name=supportRecentSyncChunkMessageCountTuning" json:"supportRecentSyncChunkMessageCountTuning,omitempty"`
	SupportHostedGroupMsg                    *bool                  `protobuf:"varint,11,opt,name=supportHostedGroupMsg" json:"supportHostedGroupMsg,omitempty"`
	SupportFbidBotChatHistory                *bool                  `protobuf:"varint,12,opt,name=supportFbidBotChatHistory" json:"supportFbidBotChatHistory,omitempty"`
	SupportAddOnHistorySyncMigration         *bool                  `protobuf:"varint,13,opt,name=supportAddOnHistorySyncMigration" json:"supportAddOnHistorySyncMigration,omitempty"`
	SupportMessageAssociation                *bool                  `protobuf:"varint,14,opt,name=supportMessageAssociation" json:"supportMessageAssociation,omitempty"`
	unknownFields                            protoimpl.UnknownFields
	sizeCache                                protoimpl.SizeCache
}

func (x *DeviceProps_HistorySyncConfig) Reset() {
	*x = DeviceProps_HistorySyncConfig{}
	mi := &file_waCompanionReg_WAWebProtobufsCompanionReg_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceProps_HistorySyncConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceProps_HistorySyncConfig) ProtoMessage() {}

func (x *DeviceProps_HistorySyncConfig) ProtoReflect() protoreflect.Message {
	mi := &file_waCompanionReg_WAWebProtobufsCompanionReg_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceProps_HistorySyncConfig.ProtoReflect.Descriptor instead.
func (*DeviceProps_HistorySyncConfig) Descriptor() ([]byte, []int) {
	return file_waCompanionReg_WAWebProtobufsCompanionReg_proto_rawDescGZIP(), []int{0, 0}
}

func (x *DeviceProps_HistorySyncConfig) GetFullSyncDaysLimit() uint32 {
	if x != nil && x.FullSyncDaysLimit != nil {
		return *x.FullSyncDaysLimit
	}
	return 0
}

func (x *DeviceProps_HistorySyncConfig) GetFullSyncSizeMbLimit() uint32 {
	if x != nil && x.FullSyncSizeMbLimit != nil {
		return *x.FullSyncSizeMbLimit
	}
	return 0
}

func (x *DeviceProps_HistorySyncConfig) GetStorageQuotaMb() uint32 {
	if x != nil && x.StorageQuotaMb != nil {
		return *x.StorageQuotaMb
	}
	return 0
}

func (x *DeviceProps_HistorySyncConfig) GetInlineInitialPayloadInE2EeMsg() bool {
	if x != nil && x.InlineInitialPayloadInE2EeMsg != nil {
		return *x.InlineInitialPayloadInE2EeMsg
	}
	return false
}

func (x *DeviceProps_HistorySyncConfig) GetRecentSyncDaysLimit() uint32 {
	if x != nil && x.RecentSyncDaysLimit != nil {
		return *x.RecentSyncDaysLimit
	}
	return 0
}

func (x *DeviceProps_HistorySyncConfig) GetSupportCallLogHistory() bool {
	if x != nil && x.SupportCallLogHistory != nil {
		return *x.SupportCallLogHistory
	}
	return false
}

func (x *DeviceProps_HistorySyncConfig) GetSupportBotUserAgentChatHistory() bool {
	if x != nil && x.SupportBotUserAgentChatHistory != nil {
		return *x.SupportBotUserAgentChatHistory
	}
	return false
}

func (x *DeviceProps_HistorySyncConfig) GetSupportCagReactionsAndPolls() bool {
	if x != nil && x.SupportCagReactionsAndPolls != nil {
		return *x.SupportCagReactionsAndPolls
	}
	return false
}

func (x *DeviceProps_HistorySyncConfig) GetSupportBizHostedMsg() bool {
	if x != nil && x.SupportBizHostedMsg != nil {
		return *x.SupportBizHostedMsg
	}
	return false
}

func (x *DeviceProps_HistorySyncConfig) GetSupportRecentSyncChunkMessageCountTuning() bool {
	if x != nil && x.SupportRecentSyncChunkMessageCountTuning != nil {
		return *x.SupportRecentSyncChunkMessageCountTuning
	}
	return false
}

func (x *DeviceProps_HistorySyncConfig) GetSupportHostedGroupMsg() bool {
	if x != nil && x.SupportHostedGroupMsg != nil {
		return *x.SupportHostedGroupMsg
	}
	return false
}

func (x *DeviceProps_HistorySyncConfig) GetSupportFbidBotChatHistory() bool {
	if x != nil && x.SupportFbidBotChatHistory != nil {
		return *x.SupportFbidBotChatHistory
	}
	return false
}

func (x *DeviceProps_HistorySyncConfig) GetSupportAddOnHistorySyncMigration() bool {
	if x != nil && x.SupportAddOnHistorySyncMigration != nil {
		return *x.SupportAddOnHistorySyncMigration
	}
	return false
}

func (x *DeviceProps_HistorySyncConfig) GetSupportMessageAssociation() bool {
	if x != nil && x.SupportMessageAssociation != nil {
		return *x.SupportMessageAssociation
	}
	return false
}

type DeviceProps_AppVersion struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Primary       *uint32                `protobuf:"varint,1,opt,name=primary" json:"primary,omitempty"`
	Secondary     *uint32                `protobuf:"varint,2,opt,name=secondary" json:"secondary,omitempty"`
	Tertiary      *uint32                `protobuf:"varint,3,opt,name=tertiary" json:"tertiary,omitempty"`
	Quaternary    *uint32                `protobuf:"varint,4,opt,name=quaternary" json:"quaternary,omitempty"`
	Quinary       *uint32                `protobuf:"varint,5,opt,name=quinary" json:"quinary,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceProps_AppVersion) Reset() {
	*x = DeviceProps_AppVersion{}
	mi := &file_waCompanionReg_WAWebProtobufsCompanionReg_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceProps_AppVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceProps_AppVersion) ProtoMessage() {}

func (x *DeviceProps_AppVersion) ProtoReflect() protoreflect.Message {
	mi := &file_waCompanionReg_WAWebProtobufsCompanionReg_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceProps_AppVersion.ProtoReflect.Descriptor instead.
func (*DeviceProps_AppVersion) Descriptor() ([]byte, []int) {
	return file_waCompanionReg_WAWebProtobufsCompanionReg_proto_rawDescGZIP(), []int{0, 1}
}

func (x *DeviceProps_AppVersion) GetPrimary() uint32 {
	if x != nil && x.Primary != nil {
		return *x.Primary
	}
	return 0
}

func (x *DeviceProps_AppVersion) GetSecondary() uint32 {
	if x != nil && x.Secondary != nil {
		return *x.Secondary
	}
	return 0
}

func (x *DeviceProps_AppVersion) GetTertiary() uint32 {
	if x != nil && x.Tertiary != nil {
		return *x.Tertiary
	}
	return 0
}

func (x *DeviceProps_AppVersion) GetQuaternary() uint32 {
	if x != nil && x.Quaternary != nil {
		return *x.Quaternary
	}
	return 0
}

func (x *DeviceProps_AppVersion) GetQuinary() uint32 {
	if x != nil && x.Quinary != nil {
		return *x.Quinary
	}
	return 0
}

var File_waCompanionReg_WAWebProtobufsCompanionReg_proto protoreflect.FileDescriptor

var file_waCompanionReg_WAWebProtobufsCompanionReg_proto_rawDesc = string([]byte{
	0x0a, 0x2f, 0x77, 0x61, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x67,
	0x2f, 0x57, 0x41, 0x57, 0x65, 0x62, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x73, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x1a, 0x57, 0x41, 0x57, 0x65, 0x62, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x67, 0x22, 0xb9, 0x0d,
	0x0a, 0x0b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x4c, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32,
	0x2e, 0x57, 0x41, 0x57, 0x65, 0x62, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x73, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x67, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x58, 0x0a, 0x0c, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x34, 0x2e, 0x57, 0x41, 0x57, 0x65, 0x62, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x67, 0x2e, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x46, 0x75, 0x6c, 0x6c, 0x53, 0x79, 0x6e, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x46, 0x75, 0x6c, 0x6c, 0x53, 0x79, 0x6e, 0x63, 0x12,
	0x67, 0x0a, 0x11, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x57, 0x41, 0x57,
	0x65, 0x62, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x67, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72,
	0x6f, 0x70, 0x73, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x79, 0x6e, 0x63, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x11, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x79,
	0x6e, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0xdf, 0x06, 0x0a, 0x11, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2c,
	0x0a, 0x11, 0x66, 0x75, 0x6c, 0x6c, 0x53, 0x79, 0x6e, 0x63, 0x44, 0x61, 0x79, 0x73, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x66, 0x75, 0x6c, 0x6c, 0x53,
	0x79, 0x6e, 0x63, 0x44, 0x61, 0x79, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x30, 0x0a, 0x13,
	0x66, 0x75, 0x6c, 0x6c, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x69, 0x7a, 0x65, 0x4d, 0x62, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x66, 0x75, 0x6c, 0x6c, 0x53,
	0x79, 0x6e, 0x63, 0x53, 0x69, 0x7a, 0x65, 0x4d, 0x62, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x26,
	0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x4d, 0x62,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51,
	0x75, 0x6f, 0x74, 0x61, 0x4d, 0x62, 0x12, 0x44, 0x0a, 0x1d, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e,
	0x45, 0x32, 0x45, 0x65, 0x4d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1d, 0x69,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x49, 0x6e, 0x45, 0x32, 0x45, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x30, 0x0a, 0x13,
	0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x44, 0x61, 0x79, 0x73, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x72, 0x65, 0x63, 0x65, 0x6e,
	0x74, 0x53, 0x79, 0x6e, 0x63, 0x44, 0x61, 0x79, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x34,
	0x0a, 0x15, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x4c, 0x6f, 0x67,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x73,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x4c, 0x6f, 0x67, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x46, 0x0a, 0x1e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x42,
	0x6f, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x74, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x6f, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x40, 0x0a, 0x1b,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x67, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x41, 0x6e, 0x64, 0x50, 0x6f, 0x6c, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x1b, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x67, 0x52, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x6e, 0x64, 0x50, 0x6f, 0x6c, 0x6c, 0x73, 0x12, 0x30,
	0x0a, 0x13, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x69, 0x7a, 0x48, 0x6f, 0x73, 0x74,
	0x65, 0x64, 0x4d, 0x73, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x73, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x42, 0x69, 0x7a, 0x48, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x4d, 0x73, 0x67,
	0x12, 0x5a, 0x0a, 0x28, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e,
	0x74, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x28, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e,
	0x74, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x34, 0x0a, 0x15,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x73, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x73, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x73, 0x67, 0x12, 0x3c, 0x0a, 0x19, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x62, 0x69,
	0x64, 0x42, 0x6f, 0x74, 0x43, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x62,
	0x69, 0x64, 0x42, 0x6f, 0x74, 0x43, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x4a, 0x0a, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x64, 0x64, 0x4f, 0x6e,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x69, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x20, 0x73, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x53,
	0x79, 0x6e, 0x63, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x19,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x73,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x19, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41,
	0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x9a, 0x01, 0x0a, 0x0a, 0x41,
	0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69,
	0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x72, 0x74, 0x69, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x65, 0x72, 0x74, 0x69, 0x61, 0x72, 0x79, 0x12, 0x1e, 0x0a,
	0x0a, 0x71, 0x75, 0x61, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x71, 0x75, 0x61, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x71, 0x75, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x71, 0x75, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x22, 0xdf, 0x02, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x48, 0x52, 0x4f, 0x4d, 0x45, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x49, 0x52, 0x45, 0x46, 0x4f, 0x58, 0x10, 0x02, 0x12, 0x06,
	0x0a, 0x02, 0x49, 0x45, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x10,
	0x04, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x41, 0x46, 0x41, 0x52, 0x49, 0x10, 0x05, 0x12, 0x08, 0x0a,
	0x04, 0x45, 0x44, 0x47, 0x45, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x53, 0x4b, 0x54,
	0x4f, 0x50, 0x10, 0x07, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x50, 0x41, 0x44, 0x10, 0x08, 0x12, 0x12,
	0x0a, 0x0e, 0x41, 0x4e, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x54,
	0x10, 0x09, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x48, 0x41, 0x4e, 0x41, 0x10, 0x0a, 0x12, 0x09, 0x0a,
	0x05, 0x41, 0x4c, 0x4f, 0x48, 0x41, 0x10, 0x0b, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x41, 0x54, 0x41,
	0x4c, 0x49, 0x4e, 0x41, 0x10, 0x0c, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x43, 0x4c, 0x5f, 0x54, 0x56,
	0x10, 0x0d, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4f, 0x53, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x10,
	0x0e, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4f, 0x53, 0x5f, 0x43, 0x41, 0x54, 0x41, 0x4c, 0x59, 0x53,
	0x54, 0x10, 0x0f, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x4e, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x5f, 0x50,
	0x48, 0x4f, 0x4e, 0x45, 0x10, 0x10, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x4e, 0x44, 0x52, 0x4f, 0x49,
	0x44, 0x5f, 0x41, 0x4d, 0x42, 0x49, 0x47, 0x55, 0x4f, 0x55, 0x53, 0x10, 0x11, 0x12, 0x0b, 0x0a,
	0x07, 0x57, 0x45, 0x41, 0x52, 0x5f, 0x4f, 0x53, 0x10, 0x12, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x52,
	0x5f, 0x57, 0x52, 0x49, 0x53, 0x54, 0x10, 0x13, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x52, 0x5f, 0x44,
	0x45, 0x56, 0x49, 0x43, 0x45, 0x10, 0x14, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x57, 0x50, 0x10, 0x15,
	0x12, 0x06, 0x0a, 0x02, 0x56, 0x52, 0x10, 0x16, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4c, 0x4f, 0x55,
	0x44, 0x5f, 0x41, 0x50, 0x49, 0x10, 0x17, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x4d, 0x41, 0x52, 0x54,
	0x47, 0x4c, 0x41, 0x53, 0x53, 0x45, 0x53, 0x10, 0x18, 0x22, 0xa2, 0x01, 0x0a, 0x1a, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x54, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x57, 0x41, 0x57,
	0x65, 0x62, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x67, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72,
	0x6f, 0x70, 0x73, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x66, 0x22, 0x29,
	0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0xa2, 0x01, 0x0a, 0x0f, 0x50, 0x72,
	0x6f, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x3e, 0x0a,
	0x1a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65,
	0x72, 0x61, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x1a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x45, 0x70, 0x68, 0x65,
	0x6d, 0x65, 0x72, 0x61, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x4f, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x57, 0x41, 0x57, 0x65, 0x62, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x67, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x4e,
	0x0a, 0x18, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72,
	0x61, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x92,
	0x01, 0x0a, 0x0e, 0x50, 0x61, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x12, 0x32, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x14, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x76, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x61, 0x64, 0x76, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x22, 0x55, 0x0a, 0x17, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64,
	0x50, 0x61, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a,
	0x0a, 0x10, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x56,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x49, 0x56, 0x22, 0x7c, 0x0a, 0x12, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x73,
	0x12, 0x30, 0x0a, 0x13, 0x69, 0x73, 0x43, 0x68, 0x61, 0x74, 0x44, 0x62, 0x4c, 0x69, 0x64, 0x4d,
	0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69,
	0x73, 0x43, 0x68, 0x61, 0x74, 0x44, 0x62, 0x4c, 0x69, 0x64, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x69, 0x73, 0x53, 0x79, 0x6e, 0x63, 0x64, 0x50, 0x75, 0x72,
	0x65, 0x4c, 0x69, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x15, 0x69, 0x73, 0x53, 0x79, 0x6e, 0x63, 0x64, 0x50, 0x75, 0x72, 0x65, 0x4c, 0x69,
	0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x68, 0x69, 0x65, 0x73, 0x74, 0x61, 0x70, 0x6f,
	0x69, 0x2f, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6d, 0x65, 0x6f, 0x77, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x77, 0x61, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x67,
})

var (
	file_waCompanionReg_WAWebProtobufsCompanionReg_proto_rawDescOnce sync.Once
	file_waCompanionReg_WAWebProtobufsCompanionReg_proto_rawDescData []byte
)

func file_waCompanionReg_WAWebProtobufsCompanionReg_proto_rawDescGZIP() []byte {
	file_waCompanionReg_WAWebProtobufsCompanionReg_proto_rawDescOnce.Do(func() {
		file_waCompanionReg_WAWebProtobufsCompanionReg_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_waCompanionReg_WAWebProtobufsCompanionReg_proto_rawDesc), len(file_waCompanionReg_WAWebProtobufsCompanionReg_proto_rawDesc)))
	})
	return file_waCompanionReg_WAWebProtobufsCompanionReg_proto_rawDescData
}

var file_waCompanionReg_WAWebProtobufsCompanionReg_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_waCompanionReg_WAWebProtobufsCompanionReg_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_waCompanionReg_WAWebProtobufsCompanionReg_proto_goTypes = []any{
	(DeviceProps_PlatformType)(0),         // 0: WAWebProtobufsCompanionReg.DeviceProps.PlatformType
	(*DeviceProps)(nil),                   // 1: WAWebProtobufsCompanionReg.DeviceProps
	(*CompanionEphemeralIdentity)(nil),    // 2: WAWebProtobufsCompanionReg.CompanionEphemeralIdentity
	(*CompanionCommitment)(nil),           // 3: WAWebProtobufsCompanionReg.CompanionCommitment
	(*ProloguePayload)(nil),               // 4: WAWebProtobufsCompanionReg.ProloguePayload
	(*PrimaryEphemeralIdentity)(nil),      // 5: WAWebProtobufsCompanionReg.PrimaryEphemeralIdentity
	(*PairingRequest)(nil),                // 6: WAWebProtobufsCompanionReg.PairingRequest
	(*EncryptedPairingRequest)(nil),       // 7: WAWebProtobufsCompanionReg.EncryptedPairingRequest
	(*ClientPairingProps)(nil),            // 8: WAWebProtobufsCompanionReg.ClientPairingProps
	(*DeviceProps_HistorySyncConfig)(nil), // 9: WAWebProtobufsCompanionReg.DeviceProps.HistorySyncConfig
	(*DeviceProps_AppVersion)(nil),        // 10: WAWebProtobufsCompanionReg.DeviceProps.AppVersion
}
var file_waCompanionReg_WAWebProtobufsCompanionReg_proto_depIdxs = []int32{
	10, // 0: WAWebProtobufsCompanionReg.DeviceProps.version:type_name -> WAWebProtobufsCompanionReg.DeviceProps.AppVersion
	0,  // 1: WAWebProtobufsCompanionReg.DeviceProps.platformType:type_name -> WAWebProtobufsCompanionReg.DeviceProps.PlatformType
	9,  // 2: WAWebProtobufsCompanionReg.DeviceProps.historySyncConfig:type_name -> WAWebProtobufsCompanionReg.DeviceProps.HistorySyncConfig
	0,  // 3: WAWebProtobufsCompanionReg.CompanionEphemeralIdentity.deviceType:type_name -> WAWebProtobufsCompanionReg.DeviceProps.PlatformType
	3,  // 4: WAWebProtobufsCompanionReg.ProloguePayload.commitment:type_name -> WAWebProtobufsCompanionReg.CompanionCommitment
	5,  // [5:5] is the sub-list for method output_type
	5,  // [5:5] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_waCompanionReg_WAWebProtobufsCompanionReg_proto_init() }
func file_waCompanionReg_WAWebProtobufsCompanionReg_proto_init() {
	if File_waCompanionReg_WAWebProtobufsCompanionReg_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_waCompanionReg_WAWebProtobufsCompanionReg_proto_rawDesc), len(file_waCompanionReg_WAWebProtobufsCompanionReg_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_waCompanionReg_WAWebProtobufsCompanionReg_proto_goTypes,
		DependencyIndexes: file_waCompanionReg_WAWebProtobufsCompanionReg_proto_depIdxs,
		EnumInfos:         file_waCompanionReg_WAWebProtobufsCompanionReg_proto_enumTypes,
		MessageInfos:      file_waCompanionReg_WAWebProtobufsCompanionReg_proto_msgTypes,
	}.Build()
	File_waCompanionReg_WAWebProtobufsCompanionReg_proto = out.File
	file_waCompanionReg_WAWebProtobufsCompanionReg_proto_goTypes = nil
	file_waCompanionReg_WAWebProtobufsCompanionReg_proto_depIdxs = nil
}
