// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.6.1
// source: waWinUIApi/WAWinUIApi.proto

package waWinUIApi

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PositronDataSource int32

const (
	PositronDataSource_MESSAGES           PositronDataSource = 1
	PositronDataSource_CHATS              PositronDataSource = 2
	PositronDataSource_CONTACTS           PositronDataSource = 3
	PositronDataSource_GROUP_METADATA     PositronDataSource = 4
	PositronDataSource_GROUP_PARTICIPANTS PositronDataSource = 5
	PositronDataSource_REACTIONS          PositronDataSource = 6
)

// Enum value maps for PositronDataSource.
var (
	PositronDataSource_name = map[int32]string{
		1: "MESSAGES",
		2: "CHATS",
		3: "CONTACTS",
		4: "GROUP_METADATA",
		5: "GROUP_PARTICIPANTS",
		6: "REACTIONS",
	}
	PositronDataSource_value = map[string]int32{
		"MESSAGES":           1,
		"CHATS":              2,
		"CONTACTS":           3,
		"GROUP_METADATA":     4,
		"GROUP_PARTICIPANTS": 5,
		"REACTIONS":          6,
	}
)

func (x PositronDataSource) Enum() *PositronDataSource {
	p := new(PositronDataSource)
	*p = x
	return p
}

func (x PositronDataSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PositronDataSource) Descriptor() protoreflect.EnumDescriptor {
	return file_waWinUIApi_WAWinUIApi_proto_enumTypes[0].Descriptor()
}

func (PositronDataSource) Type() protoreflect.EnumType {
	return &file_waWinUIApi_WAWinUIApi_proto_enumTypes[0]
}

func (x PositronDataSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PositronDataSource) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PositronDataSource(num)
	return nil
}

// Deprecated: Use PositronDataSource.Descriptor instead.
func (PositronDataSource) EnumDescriptor() ([]byte, []int) {
	return file_waWinUIApi_WAWinUIApi_proto_rawDescGZIP(), []int{0}
}

type PositronMessage struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Timestamp     *int64                  `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Type          *string                 `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Body          *string                 `protobuf:"bytes,3,opt,name=body" json:"body,omitempty"`
	ID            *PositronMessage_MsgKey `protobuf:"bytes,4,opt,name=ID" json:"ID,omitempty"`
	JSON          *string                 `protobuf:"bytes,99,opt,name=JSON" json:"JSON,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PositronMessage) Reset() {
	*x = PositronMessage{}
	mi := &file_waWinUIApi_WAWinUIApi_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PositronMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositronMessage) ProtoMessage() {}

func (x *PositronMessage) ProtoReflect() protoreflect.Message {
	mi := &file_waWinUIApi_WAWinUIApi_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositronMessage.ProtoReflect.Descriptor instead.
func (*PositronMessage) Descriptor() ([]byte, []int) {
	return file_waWinUIApi_WAWinUIApi_proto_rawDescGZIP(), []int{0}
}

func (x *PositronMessage) GetTimestamp() int64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *PositronMessage) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *PositronMessage) GetBody() string {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return ""
}

func (x *PositronMessage) GetID() *PositronMessage_MsgKey {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *PositronMessage) GetJSON() string {
	if x != nil && x.JSON != nil {
		return *x.JSON
	}
	return ""
}

type PositronChat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            *string                `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	Name          *string                `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Timestamp     *int64                 `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	UnreadCount   *int64                 `protobuf:"varint,4,opt,name=unreadCount" json:"unreadCount,omitempty"`
	JSON          *string                `protobuf:"bytes,99,opt,name=JSON" json:"JSON,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PositronChat) Reset() {
	*x = PositronChat{}
	mi := &file_waWinUIApi_WAWinUIApi_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PositronChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositronChat) ProtoMessage() {}

func (x *PositronChat) ProtoReflect() protoreflect.Message {
	mi := &file_waWinUIApi_WAWinUIApi_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositronChat.ProtoReflect.Descriptor instead.
func (*PositronChat) Descriptor() ([]byte, []int) {
	return file_waWinUIApi_WAWinUIApi_proto_rawDescGZIP(), []int{1}
}

func (x *PositronChat) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *PositronChat) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *PositronChat) GetTimestamp() int64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *PositronChat) GetUnreadCount() int64 {
	if x != nil && x.UnreadCount != nil {
		return *x.UnreadCount
	}
	return 0
}

func (x *PositronChat) GetJSON() string {
	if x != nil && x.JSON != nil {
		return *x.JSON
	}
	return ""
}

type PositronContact struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	ID                   *string                `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	PhoneNumber          *string                `protobuf:"bytes,2,opt,name=phoneNumber" json:"phoneNumber,omitempty"`
	Name                 *string                `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	IsAddressBookContact *bool                  `protobuf:"varint,4,opt,name=isAddressBookContact" json:"isAddressBookContact,omitempty"`
	JSON                 *string                `protobuf:"bytes,99,opt,name=JSON" json:"JSON,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *PositronContact) Reset() {
	*x = PositronContact{}
	mi := &file_waWinUIApi_WAWinUIApi_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PositronContact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositronContact) ProtoMessage() {}

func (x *PositronContact) ProtoReflect() protoreflect.Message {
	mi := &file_waWinUIApi_WAWinUIApi_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositronContact.ProtoReflect.Descriptor instead.
func (*PositronContact) Descriptor() ([]byte, []int) {
	return file_waWinUIApi_WAWinUIApi_proto_rawDescGZIP(), []int{2}
}

func (x *PositronContact) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *PositronContact) GetPhoneNumber() string {
	if x != nil && x.PhoneNumber != nil {
		return *x.PhoneNumber
	}
	return ""
}

func (x *PositronContact) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *PositronContact) GetIsAddressBookContact() bool {
	if x != nil && x.IsAddressBookContact != nil {
		return *x.IsAddressBookContact
	}
	return false
}

func (x *PositronContact) GetJSON() string {
	if x != nil && x.JSON != nil {
		return *x.JSON
	}
	return ""
}

type PositronGroupMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            *string                `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	Subject       *string                `protobuf:"bytes,2,opt,name=subject" json:"subject,omitempty"`
	JSON          *string                `protobuf:"bytes,99,opt,name=JSON" json:"JSON,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PositronGroupMetadata) Reset() {
	*x = PositronGroupMetadata{}
	mi := &file_waWinUIApi_WAWinUIApi_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PositronGroupMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositronGroupMetadata) ProtoMessage() {}

func (x *PositronGroupMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_waWinUIApi_WAWinUIApi_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositronGroupMetadata.ProtoReflect.Descriptor instead.
func (*PositronGroupMetadata) Descriptor() ([]byte, []int) {
	return file_waWinUIApi_WAWinUIApi_proto_rawDescGZIP(), []int{3}
}

func (x *PositronGroupMetadata) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *PositronGroupMetadata) GetSubject() string {
	if x != nil && x.Subject != nil {
		return *x.Subject
	}
	return ""
}

func (x *PositronGroupMetadata) GetJSON() string {
	if x != nil && x.JSON != nil {
		return *x.JSON
	}
	return ""
}

type PositronGroupParticipants struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            *string                `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	Participants  []string               `protobuf:"bytes,2,rep,name=participants" json:"participants,omitempty"`
	JSON          *string                `protobuf:"bytes,99,opt,name=JSON" json:"JSON,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PositronGroupParticipants) Reset() {
	*x = PositronGroupParticipants{}
	mi := &file_waWinUIApi_WAWinUIApi_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PositronGroupParticipants) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositronGroupParticipants) ProtoMessage() {}

func (x *PositronGroupParticipants) ProtoReflect() protoreflect.Message {
	mi := &file_waWinUIApi_WAWinUIApi_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositronGroupParticipants.ProtoReflect.Descriptor instead.
func (*PositronGroupParticipants) Descriptor() ([]byte, []int) {
	return file_waWinUIApi_WAWinUIApi_proto_rawDescGZIP(), []int{4}
}

func (x *PositronGroupParticipants) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *PositronGroupParticipants) GetParticipants() []string {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *PositronGroupParticipants) GetJSON() string {
	if x != nil && x.JSON != nil {
		return *x.JSON
	}
	return ""
}

type PositronReaction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            *string                `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	ParentMsgKey  *string                `protobuf:"bytes,2,opt,name=parentMsgKey" json:"parentMsgKey,omitempty"`
	ReactionText  *string                `protobuf:"bytes,3,opt,name=reactionText" json:"reactionText,omitempty"`
	Timestamp     *int64                 `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	SenderUserJID *string                `protobuf:"bytes,5,opt,name=senderUserJID" json:"senderUserJID,omitempty"`
	JSON          *string                `protobuf:"bytes,99,opt,name=JSON" json:"JSON,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PositronReaction) Reset() {
	*x = PositronReaction{}
	mi := &file_waWinUIApi_WAWinUIApi_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PositronReaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositronReaction) ProtoMessage() {}

func (x *PositronReaction) ProtoReflect() protoreflect.Message {
	mi := &file_waWinUIApi_WAWinUIApi_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositronReaction.ProtoReflect.Descriptor instead.
func (*PositronReaction) Descriptor() ([]byte, []int) {
	return file_waWinUIApi_WAWinUIApi_proto_rawDescGZIP(), []int{5}
}

func (x *PositronReaction) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *PositronReaction) GetParentMsgKey() string {
	if x != nil && x.ParentMsgKey != nil {
		return *x.ParentMsgKey
	}
	return ""
}

func (x *PositronReaction) GetReactionText() string {
	if x != nil && x.ReactionText != nil {
		return *x.ReactionText
	}
	return ""
}

func (x *PositronReaction) GetTimestamp() int64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *PositronReaction) GetSenderUserJID() string {
	if x != nil && x.SenderUserJID != nil {
		return *x.SenderUserJID
	}
	return ""
}

func (x *PositronReaction) GetJSON() string {
	if x != nil && x.JSON != nil {
		return *x.JSON
	}
	return ""
}

type PositronData struct {
	state             protoimpl.MessageState       `protogen:"open.v1"`
	DataSource        *PositronDataSource          `protobuf:"varint,1,opt,name=dataSource,enum=WAWinUIApi.PositronDataSource" json:"dataSource,omitempty"`
	Messages          []*PositronMessage           `protobuf:"bytes,2,rep,name=messages" json:"messages,omitempty"`
	Chats             []*PositronChat              `protobuf:"bytes,3,rep,name=chats" json:"chats,omitempty"`
	Contacts          []*PositronContact           `protobuf:"bytes,4,rep,name=contacts" json:"contacts,omitempty"`
	GroupMetadata     []*PositronGroupMetadata     `protobuf:"bytes,5,rep,name=groupMetadata" json:"groupMetadata,omitempty"`
	GroupParticipants []*PositronGroupParticipants `protobuf:"bytes,6,rep,name=groupParticipants" json:"groupParticipants,omitempty"`
	Reactions         []*PositronReaction          `protobuf:"bytes,7,rep,name=reactions" json:"reactions,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *PositronData) Reset() {
	*x = PositronData{}
	mi := &file_waWinUIApi_WAWinUIApi_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PositronData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositronData) ProtoMessage() {}

func (x *PositronData) ProtoReflect() protoreflect.Message {
	mi := &file_waWinUIApi_WAWinUIApi_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositronData.ProtoReflect.Descriptor instead.
func (*PositronData) Descriptor() ([]byte, []int) {
	return file_waWinUIApi_WAWinUIApi_proto_rawDescGZIP(), []int{6}
}

func (x *PositronData) GetDataSource() PositronDataSource {
	if x != nil && x.DataSource != nil {
		return *x.DataSource
	}
	return PositronDataSource_MESSAGES
}

func (x *PositronData) GetMessages() []*PositronMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *PositronData) GetChats() []*PositronChat {
	if x != nil {
		return x.Chats
	}
	return nil
}

func (x *PositronData) GetContacts() []*PositronContact {
	if x != nil {
		return x.Contacts
	}
	return nil
}

func (x *PositronData) GetGroupMetadata() []*PositronGroupMetadata {
	if x != nil {
		return x.GroupMetadata
	}
	return nil
}

func (x *PositronData) GetGroupParticipants() []*PositronGroupParticipants {
	if x != nil {
		return x.GroupParticipants
	}
	return nil
}

func (x *PositronData) GetReactions() []*PositronReaction {
	if x != nil {
		return x.Reactions
	}
	return nil
}

type PositronMessage_MsgKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromMe        *bool                  `protobuf:"varint,1,opt,name=fromMe" json:"fromMe,omitempty"`
	Remote        *PositronMessage_WID   `protobuf:"bytes,2,opt,name=remote" json:"remote,omitempty"`
	ID            *string                `protobuf:"bytes,3,opt,name=ID" json:"ID,omitempty"`
	Participant   *PositronMessage_WID   `protobuf:"bytes,4,opt,name=participant" json:"participant,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PositronMessage_MsgKey) Reset() {
	*x = PositronMessage_MsgKey{}
	mi := &file_waWinUIApi_WAWinUIApi_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PositronMessage_MsgKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositronMessage_MsgKey) ProtoMessage() {}

func (x *PositronMessage_MsgKey) ProtoReflect() protoreflect.Message {
	mi := &file_waWinUIApi_WAWinUIApi_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositronMessage_MsgKey.ProtoReflect.Descriptor instead.
func (*PositronMessage_MsgKey) Descriptor() ([]byte, []int) {
	return file_waWinUIApi_WAWinUIApi_proto_rawDescGZIP(), []int{0, 0}
}

func (x *PositronMessage_MsgKey) GetFromMe() bool {
	if x != nil && x.FromMe != nil {
		return *x.FromMe
	}
	return false
}

func (x *PositronMessage_MsgKey) GetRemote() *PositronMessage_WID {
	if x != nil {
		return x.Remote
	}
	return nil
}

func (x *PositronMessage_MsgKey) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *PositronMessage_MsgKey) GetParticipant() *PositronMessage_WID {
	if x != nil {
		return x.Participant
	}
	return nil
}

type PositronMessage_WID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Serialized    *string                `protobuf:"bytes,1,opt,name=serialized" json:"serialized,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PositronMessage_WID) Reset() {
	*x = PositronMessage_WID{}
	mi := &file_waWinUIApi_WAWinUIApi_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PositronMessage_WID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositronMessage_WID) ProtoMessage() {}

func (x *PositronMessage_WID) ProtoReflect() protoreflect.Message {
	mi := &file_waWinUIApi_WAWinUIApi_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositronMessage_WID.ProtoReflect.Descriptor instead.
func (*PositronMessage_WID) Descriptor() ([]byte, []int) {
	return file_waWinUIApi_WAWinUIApi_proto_rawDescGZIP(), []int{0, 1}
}

func (x *PositronMessage_WID) GetSerialized() string {
	if x != nil && x.Serialized != nil {
		return *x.Serialized
	}
	return ""
}

var File_waWinUIApi_WAWinUIApi_proto protoreflect.FileDescriptor

var file_waWinUIApi_WAWinUIApi_proto_rawDesc = string([]byte{
	0x0a, 0x1b, 0x77, 0x61, 0x57, 0x69, 0x6e, 0x55, 0x49, 0x41, 0x70, 0x69, 0x2f, 0x57, 0x41, 0x57,
	0x69, 0x6e, 0x55, 0x49, 0x41, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x57,
	0x41, 0x57, 0x69, 0x6e, 0x55, 0x49, 0x41, 0x70, 0x69, 0x22, 0xf5, 0x02, 0x0a, 0x0f, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x72, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x12, 0x32, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x57, 0x41, 0x57, 0x69, 0x6e, 0x55, 0x49, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x72, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x73, 0x67,
	0x4b, 0x65, 0x79, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x18,
	0x63, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x1a, 0xac, 0x01, 0x0a, 0x06,
	0x4d, 0x73, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x4d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x4d, 0x65, 0x12, 0x37,
	0x0a, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x57, 0x41, 0x57, 0x69, 0x6e, 0x55, 0x49, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x72, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x57, 0x49, 0x44, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x41, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x57,
	0x41, 0x57, 0x69, 0x6e, 0x55, 0x49, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x72,
	0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x57, 0x49, 0x44, 0x52, 0x0b, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x1a, 0x25, 0x0a, 0x03, 0x57, 0x49,
	0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x64, 0x22, 0x86, 0x01, 0x0a, 0x0c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x72, 0x6f, 0x6e, 0x43, 0x68,
	0x61, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x18, 0x63,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x22, 0x9f, 0x01, 0x0a, 0x0f, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x72, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x69, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x42, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x14, 0x69, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x6f, 0x6f,
	0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e,
	0x18, 0x63, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x22, 0x55, 0x0a, 0x15,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x72, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x18, 0x63, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4a,
	0x53, 0x4f, 0x4e, 0x22, 0x63, 0x0a, 0x19, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x72, 0x6f, 0x6e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x18, 0x63, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x22, 0xc2, 0x01, 0x0a, 0x10, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x72, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x22, 0x0a,
	0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x4b, 0x65,
	0x79, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x4a, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4a, 0x53, 0x4f,
	0x4e, 0x18, 0x63, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x22, 0xca, 0x03,
	0x0a, 0x0c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x72, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3e,
	0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x57, 0x41, 0x57, 0x69, 0x6e, 0x55, 0x49, 0x41, 0x70, 0x69, 0x2e,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x72, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x37,
	0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x57, 0x41, 0x57, 0x69, 0x6e, 0x55, 0x49, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x72, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x57, 0x41, 0x57, 0x69, 0x6e, 0x55, 0x49,
	0x41, 0x70, 0x69, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x72, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x74,
	0x52, 0x05, 0x63, 0x68, 0x61, 0x74, 0x73, 0x12, 0x37, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x57, 0x41, 0x57, 0x69,
	0x6e, 0x55, 0x49, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x72, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73,
	0x12, 0x47, 0x0a, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x57, 0x41, 0x57, 0x69, 0x6e, 0x55,
	0x49, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x72, 0x6f, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x53, 0x0a, 0x11, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x57, 0x41, 0x57, 0x69, 0x6e, 0x55, 0x49, 0x41, 0x70,
	0x69, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x72, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x11, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x3a,
	0x0a, 0x09, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x57, 0x41, 0x57, 0x69, 0x6e, 0x55, 0x49, 0x41, 0x70, 0x69, 0x2e, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x72, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x09, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2a, 0x76, 0x0a, 0x12, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x72, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x53, 0x10, 0x01, 0x12, 0x09,
	0x0a, 0x05, 0x43, 0x48, 0x41, 0x54, 0x53, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4e,
	0x54, 0x41, 0x43, 0x54, 0x53, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x52, 0x4f, 0x55, 0x50,
	0x5f, 0x4d, 0x45, 0x54, 0x41, 0x44, 0x41, 0x54, 0x41, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x47,
	0x52, 0x4f, 0x55, 0x50, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x49, 0x50, 0x41, 0x4e, 0x54,
	0x53, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x45, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x53,
	0x10, 0x06, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x73, 0x68, 0x69, 0x65, 0x73, 0x74, 0x61, 0x70, 0x6f, 0x69, 0x2f, 0x77, 0x68, 0x61, 0x74,
	0x73, 0x6d, 0x65, 0x6f, 0x77, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x77, 0x61, 0x57, 0x69,
	0x6e, 0x55, 0x49, 0x41, 0x70, 0x69,
})

var (
	file_waWinUIApi_WAWinUIApi_proto_rawDescOnce sync.Once
	file_waWinUIApi_WAWinUIApi_proto_rawDescData []byte
)

func file_waWinUIApi_WAWinUIApi_proto_rawDescGZIP() []byte {
	file_waWinUIApi_WAWinUIApi_proto_rawDescOnce.Do(func() {
		file_waWinUIApi_WAWinUIApi_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_waWinUIApi_WAWinUIApi_proto_rawDesc), len(file_waWinUIApi_WAWinUIApi_proto_rawDesc)))
	})
	return file_waWinUIApi_WAWinUIApi_proto_rawDescData
}

var file_waWinUIApi_WAWinUIApi_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_waWinUIApi_WAWinUIApi_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_waWinUIApi_WAWinUIApi_proto_goTypes = []any{
	(PositronDataSource)(0),           // 0: WAWinUIApi.PositronDataSource
	(*PositronMessage)(nil),           // 1: WAWinUIApi.PositronMessage
	(*PositronChat)(nil),              // 2: WAWinUIApi.PositronChat
	(*PositronContact)(nil),           // 3: WAWinUIApi.PositronContact
	(*PositronGroupMetadata)(nil),     // 4: WAWinUIApi.PositronGroupMetadata
	(*PositronGroupParticipants)(nil), // 5: WAWinUIApi.PositronGroupParticipants
	(*PositronReaction)(nil),          // 6: WAWinUIApi.PositronReaction
	(*PositronData)(nil),              // 7: WAWinUIApi.PositronData
	(*PositronMessage_MsgKey)(nil),    // 8: WAWinUIApi.PositronMessage.MsgKey
	(*PositronMessage_WID)(nil),       // 9: WAWinUIApi.PositronMessage.WID
}
var file_waWinUIApi_WAWinUIApi_proto_depIdxs = []int32{
	8,  // 0: WAWinUIApi.PositronMessage.ID:type_name -> WAWinUIApi.PositronMessage.MsgKey
	0,  // 1: WAWinUIApi.PositronData.dataSource:type_name -> WAWinUIApi.PositronDataSource
	1,  // 2: WAWinUIApi.PositronData.messages:type_name -> WAWinUIApi.PositronMessage
	2,  // 3: WAWinUIApi.PositronData.chats:type_name -> WAWinUIApi.PositronChat
	3,  // 4: WAWinUIApi.PositronData.contacts:type_name -> WAWinUIApi.PositronContact
	4,  // 5: WAWinUIApi.PositronData.groupMetadata:type_name -> WAWinUIApi.PositronGroupMetadata
	5,  // 6: WAWinUIApi.PositronData.groupParticipants:type_name -> WAWinUIApi.PositronGroupParticipants
	6,  // 7: WAWinUIApi.PositronData.reactions:type_name -> WAWinUIApi.PositronReaction
	9,  // 8: WAWinUIApi.PositronMessage.MsgKey.remote:type_name -> WAWinUIApi.PositronMessage.WID
	9,  // 9: WAWinUIApi.PositronMessage.MsgKey.participant:type_name -> WAWinUIApi.PositronMessage.WID
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_waWinUIApi_WAWinUIApi_proto_init() }
func file_waWinUIApi_WAWinUIApi_proto_init() {
	if File_waWinUIApi_WAWinUIApi_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_waWinUIApi_WAWinUIApi_proto_rawDesc), len(file_waWinUIApi_WAWinUIApi_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_waWinUIApi_WAWinUIApi_proto_goTypes,
		DependencyIndexes: file_waWinUIApi_WAWinUIApi_proto_depIdxs,
		EnumInfos:         file_waWinUIApi_WAWinUIApi_proto_enumTypes,
		MessageInfos:      file_waWinUIApi_WAWinUIApi_proto_msgTypes,
	}.Build()
	File_waWinUIApi_WAWinUIApi_proto = out.File
	file_waWinUIApi_WAWinUIApi_proto_goTypes = nil
	file_waWinUIApi_WAWinUIApi_proto_depIdxs = nil
}
